---
- name: "Sign the user local private key"
  tags:
    - sign_user_key
  vars:
    vault_name: "kv-{{ service_name }}-{{ env }}-{{ site }}"
    secret_name: "kvk-{{ service_name }}-{{ env }}-{{ site }}-{{ ca_type }}-{{ ca_key_type }}"
    resource_group_name: "rg-{{ service_name }}-{{ env }}-{{ site }}"
    user_ssh_key_filename: "{{ user }}-{{ env }}-{{ site }}"

  block:
    # Create a prod <site_name> ssh key if it does not already exist
    - name: Generate an OpenSSH keypair with the default values (4096 bits, rsa)
      community.crypto.openssh_keypair:
        path: "~/.ssh/{{ user_ssh_key_filename }}"
        type: rsa
        size: 4096
        mode: 0600
        force: false
        comment: ""
      register: user_key

    - name: "Retrieving secrets using Azure"
      when:
        - use_azure is defined
        - use_azure
      block:
        - name: Get Key Vault by name
          azure.azcollection.azure_rm_keyvault_info:
            resource_group: "{{ resource_group_name }}"
            name: "{{ vault_name }}"
          register: key_vault_attrs

        - name: Set key vault URI fact
          set_fact:
            key_vault_uri: "{{ key_vault_attrs['keyvaults'][0]['vault_uri'] }}"

        - name: Get secret value
          azure.azcollection.azure_rm_keyvaultsecret_info:
            vault_uri: "{{ key_vault_uri }}"
            name: "{{ secret_name }}"
          register: ssh_key_attrs

        - name: Set secret fact
          ansible.builtin.set_fact:
            ssh_key: "{{ ssh_key_attrs.secrets[0].secret }}"
      rescue:
        - name: "Getting secrets from Azure failed"
          ansible.builtin.set_fact:
            task_failed: true

    - name: "Retrieving secrets using BWS"
      when:
        - use_azure is not defined or not use_azure
      block:
        - name: "Get secret value"
          ansible.builtin.set_fact:
            bws_secret_value: "{{ lookup('community.general.bitwarden_secrets_manager', bws_secret_id).value }}"

        # TODO: The single quotes are currently a hack around: https://github.com/sebastiaan-dev/terraform-provider-bitwarden-secrets/issues/5
        - name: "Remove leading and trailing single quotes from bws_secret_value"
          ansible.builtin.set_fact:
            ssh_key: '{{ bws_secret_value | regex_replace("^''|''$", '''', multiline=True) }}'

      rescue:
        - name: "Getting secrets from BWS failed"
          ansible.builtin.set_fact:
            task_failed: true

    - name: Create secret CA private keytmp file with only my access
      ansible.builtin.tempfile:
        state: file
        suffix: _ca_private_key
      register: ssh_key_file

    - name: Ensure file is only readable by me
      ansible.builtin.file:
        path: "{{ ssh_key_file.path }}"
        mode: 0600

    - name: Write secret to tmpfile
      ansible.builtin.lineinfile:
        state: present
        dest: "{{ ssh_key_file.path }}"
        line: "{{ ssh_key }}"

    - name: Remove any existing certificate
      ansible.builtin.file:
        path: "~/.ssh/{{ user_ssh_key_filename }}-cert.pub"
        state: absent

    - name: Sign the user ssh key
      ansible.builtin.shell:
        cmd: >-
          set -o pipefail;
          ssh-keygen -s {{ ssh_key_file.path }} -I {{ user }} -n {{ principals }} -V {{ expiry }} ~/.ssh/{{ user_ssh_key_filename }}.pub
        creates: "~/.ssh/{{ user_ssh_key_filename }}-cert.pub"

    - name: Check the signed the user ssh key
      ansible.builtin.shell: >-
        set -o pipefail;
        ssh-keygen -L -f ~/.ssh/{{ user_ssh_key_filename }}-cert.pub
      changed_when: false

    - name: Delete private key file
      ansible.builtin.file:
        path: "{{ ssh_key_file.path }}"
        state: absent

  rescue:
    - name: "Signing using User CA failed"
      ansible.builtin.set_fact:
        task_failed: true
