---
- name: "Sign the user host private key"
  tags:
    - sign_host_key
  vars:
    vault_name: "kv-{{ service_name }}-{{ env }}-{{ site }}"
    secret_name: "kvk-{{ service_name }}-{{ env }}-{{ site }}-{{ ca_type }}-{{ ca_key_type }}"
    resource_group_name: "rg-{{ service_name }}-{{ env }}-{{ site }}"
  block:
    - name: Check that host has pregenerated ssh key
      ansible.builtin.stat:
        path: "{{ host_key_path }}"
      register: host_key_exists

    - name: Assert that host has pregenerated ssh key
      ansible.builtin.assert:
        that: host_key_exists.stat.exists
        fail_msg: "Host ssh key does not exist"

    - name: Get Key Vault by name
      azure.azcollection.azure_rm_keyvault_info:
        resource_group: "{{ resource_group_name }}"
        name: "{{ vault_name }}"
      register: key_vault_attrs
      delegate_to: localhost

    - name: Set key vault URI fact
      set_fact:
        key_vault_uri: "{{ key_vault_attrs['keyvaults'][0]['vault_uri'] }}"
      delegate_to: localhost

    - name: Get secret value
      azure.azcollection.azure_rm_keyvaultsecret_info:
        vault_uri: "{{ key_vault_uri }}"
        name: "{{ secret_name }}"
      register: ssh_ca_priv_key_attrs
      delegate_to: localhost

    - name: Set secret fact
      ansible.builtin.set_fact:
        ssh_ca_priv_key: "{{ ssh_ca_priv_key_attrs.secrets[0].secret }}"
      delegate_to: localhost

    - name: Create secret CA private keytmp file with only my access
      ansible.builtin.tempfile:
        state: file
        suffix: _ca_private_key
      register: ssh_ca_priv_key_file

    - name: Ensure file is only readable by me
      ansible.builtin.file:
        path: "{{ ssh_ca_priv_key_file.path }}"
        mode: 0600

    - name: Write secret to tmpfile
      ansible.builtin.lineinfile:
        state: present
        dest: "{{ ssh_ca_priv_key_file.path }}"
        line: "{{ ssh_ca_priv_key }}"

    - name: Sign the host ssh key
      ansible.builtin.shell:
        cmd: >-
          set -o pipefail;
          ssh-keygen -s {{ ssh_ca_priv_key_file.path }} -I {{ identity }} -h -n {{ principals }} -V {{ expiry }} {{ host_key_path }}.pub
        creates: "{{ host_key_path }}.pub"
      args:
        executable: /bin/bash

    - name: Check the signed the host ssh key
      ansible.builtin.shell: >-
        set -o pipefail;
        ssh-keygen -L -f {{ host_key_path }}-cert.pub
      args:
        executable: /bin/bash
      changed_when: false

    - name: Update sshd_config for the new host certificate
      ansible.builtin.lineinfile:
        state: present
        dest: "/etc/ssh/sshd_config"
        line: "HostCertificate {{ host_key_path }}-cert.pub"
        insertafter: "HostKey"
        search_string: "HostCertificate {{ host_key_path }}-cert.pub"

    - name: Restart the sshd daemon
      ansible.builtin.service:
        name: sshd
        state: restarted

    - name: Delete private key file
      ansible.builtin.file:
        path: "{{ ssh_ca_priv_key_file.path }}"
        state: absent

  rescue:
    - name: "Signing using Host CA failed"
      ansible.builtin.set_fact:
        task_failed: true
